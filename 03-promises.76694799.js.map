{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SACtBD,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBA0BtC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,CAAEL,WAAUM,MAAAL,GAClC,OAAO,IAAIM,SAAQ,SAACC,EAASC,GACrBP,EACFM,EAAQH,GAERI,EAAOJ,E,IA/BfT,EAAKc,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAKN,IAJE,IAAIC,EAAQC,OAAOH,EAAMI,cAAcT,MAAMU,OACvCC,EAAOH,OAAOH,EAAMI,cAAcG,KAAKF,OACvCG,EAASL,OAAOH,EAAMI,cAAcK,OAAOJ,OAE1CK,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACrDtB,EAAcsB,EAAUR,GACrBS,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUwB,EAAKD,EAALjB,MACnBmB,YAAW,WACPC,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAANL,EAAM,M,GACrEA,E,IAEJM,OAAM,SAAAP,G,IAAGvB,EAAQuB,EAARvB,SAAU+B,EAAKR,EAALjB,MAClBmB,YAAW,WACTC,EAAAhC,GAASiC,OAAOK,QAAQ,sBAAqCH,OAAf7B,EAAS,QAAY6B,OAANE,EAAM,M,GAClEA,E,IAEPlB,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n    let delay = Number(event.currentTarget.delay.value);\n    const step = Number(event.currentTarget.step.value);\n    const amount = Number(event.currentTarget.amount.value);\n  \n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n      setTimeout(() => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        }, delay);\n    });\n    delay += step;\n  }; \n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objectPromice = { position, delay };\n  return new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve(objectPromice);\n      } else {\n        reject(objectPromice);\n       }; \n  });\n};\n\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay4","shouldResolve","Math","random","objectPromice","delay","Promise","resolve","reject","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step1","step","amount1","amount","position1","then","param","delay2","setTimeout","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.76694799.js.map"}